Index: Index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Generation Review</title>\n<style>\n  body, html {\n    height: 100%;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #f0f0f0;\n  }\n\n  .container {\n    display: flex;\n    width: 100%;\n    height: 100vh;\n    align-items: stretch;\n  }\n\n  .left-container, .right-container {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 20px;\n  }\n\n  .media-container, .table-container {\n    width: 100%;\n    max-width: 1000px;\n  }\n\n  .right-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 20px;\n    width: 100%;\n  }\n\n  .question-title {\n    margin-bottom: 10px;\n    font-size: 16px;\n    width: 100%;\n  }\n\n  .question-group {\n    width: 100%;\n    margin-bottom: 20px;\n    padding: 0 20px;\n  }\n\n  .right-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 20px;\n    padding-left: 40px;\n    width: 100%;\n  }\n\n  .right-container > button {\n    margin-top: 20px;\n    width: auto;\n  }\n\n  button {\n    margin: 5px 0;\n    padding: 10px 20px;\n    font-size: 16px;\n    cursor: pointer;\n  }\n\n  .media-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 90%;\n  }\n\n  video, img {\n    max-width: 30%;\n    max-height: 350px;\n    object-fit: contain;\n    border: 2px solid #000;\n    margin: 5px;\n  }\n\n  .button-success, .button-fail {\n      background-color: #f0f0f0;\n      color: black;\n    }\n    .active-success {\n      background-color: #4CAF50;\n      color: white;\n    }\n    .active-fail {\n      background-color: #f44336;\n      color: white;\n    }\n\n  .table-container {\n    width: 90%;\n    max-height: 200px;\n    overflow-y: auto;\n    text-align: left;\n    border: 1px solid black;\n  }\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid black;\n    padding: 8px;\n  }\n  #pageTitle {\n    font-size: 24px;\n    margin-top: 20px;\n  }\n\n  #progressDisplay {\n    font-size: 18px;\n    margin: 20px;\n    color: #333;\n  }\n</style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"left-container\">\n      <div id=\"progressDisplay\">Progress: 0/800</div>\n      <h2 id=\"pageTitle\">Video Title</h2>\n      <div class=\"media-container\" style=\"padding-bottom: 30px\">\n        <img id=\"imageDisplay\" src=\"\" alt=\"Associated Image\">\n        <video id=\"videoCenter\" muted loop>\n          <source id=\"videoCenterSource\" src=\"\" type=\"video/mp4\">\n        </video>\n        <video id=\"videoPlayer\" autoplay muted loop>\n          <source id=\"videoSource\" src=\"\" type=\"video/mp4\">\n        </video>\n      </div>\n      <div class=\"table-container\">\n        <table id=\"recordTable\">\n            <tr>\n                <th>Original Object</th>\n                <th>Prompt</th>\n                <th>Recognizable</th>\n                <th>Adjectives</th>\n                <th>Overall</th>\n            </tr>\n        </table>\n      </div>\n    </div>\n    <div class=\"right-container\">\n      <div class=\"question-group\">\n        <p class=\"question-title\">Does the model include the <strong>main elements</strong> from the prompt? </p>\n        <button class=\"button-success\" id=\"button1\" onclick=\"toggleState(1)\">YES</button>\n        <button class=\"button-fail\" id=\"button2\" onclick=\"toggleState(2)\">NO</button>\n      </div>\n      <div class=\"question-group\">\n        <p class=\"question-title\">Does the model accurately represent specific features from the prompt, like <strong>color or texture</strong>?</p>\n        <button class=\"button-success\" id=\"button3\" onclick=\"toggleState(3)\">YES</button>\n        <button class=\"button-fail\" id=\"button4\" onclick=\"toggleState(4)\">NO</button>\n      </div>\n      <div class=\"question-group\">\n        <p class=\"question-title\">Does the model reflect the <strong>intended theme</strong> of the prompt?</p>\n        <button class=\"button-success\" id=\"button5\" onclick=\"toggleState(5)\">YES</button>\n        <button class=\"button-fail\" id=\"button6\" onclick=\"toggleState(6)\">NO</button>\n      </div>\n      <button id=\"nextButton\" onclick=\"submitAndLoadNext()\" style=\"margin-left: 20px;\">Go to Next</button>\n      <button onclick=\"exportTableToCSV('export.csv')\" style=\"margin-left: 20px;\">Export Table</button>\n    </div>\n  </div>\n\n  <script>\n    // YN shortcut system\n    let currentGroup = 0;\n    document.addEventListener('keydown', function(event) {\n      if (event.code === 'KeyY') {\n        event.preventDefault();\n        applyShortcut('success');\n      } else if (event.code === 'KeyN') {\n        event.preventDefault();\n        applyShortcut('failure');\n      }\n    });\n\n    function applyShortcut(type) {\n      for (let i = currentGroup; i < buttonStates.length; i++) {\n        if (buttonStates[i] === null) { // first available button\n          const successButtonId = 2 * i + 1; //  success button id\n          const failureButtonId = 2 * i + 2; // failure button id\n\n          if (type === 'success') {\n            toggleState(successButtonId);\n          } else if (type === 'failure') {\n            toggleState(failureButtonId);\n          }\n\n          currentGroup = i + 1; // update currentGroup\n          break;\n        }\n      }\n    }\n\n    function loadMedia(index) {\n      if (index >= videoList.length) {\n        return;\n      }\n\n      const currentVideo = videoList[index];\n      const videoPlayer = document.getElementById('videoPlayer');\n      const videoCenter = document.getElementById('videoCenter');\n      const imageDisplay = document.getElementById('imageDisplay');\n      const imagePath = `/${currentVideo.folder}/rendered_pic.png`;\n      const videoPath = currentVideo.path;\n\n      document.getElementById('pageTitle').textContent = currentVideo.name;\n      videoPlayer.src = videoPath;\n      videoCenter.src = videoPath;\n      imageDisplay.src = imagePath;\n\n      videoPlayer.load();\n      videoCenter.load();\n\n      videoPlayer.removeAttribute('controls');\n      videoCenter.removeAttribute('controls');\n\n      currentGroup = 0; // reset currentGroup\n    }\n\n    let videoList = [];\n    let videoIndex = 0;\n    let count = 0;\n    let buttonStates = [null, null, null];\n\n    document.addEventListener('DOMContentLoaded', function() {\n      fetch('output.json')\n        .then(response => response.json())\n        .then(data => {\n          videoList = buildVideoList(data);\n          if (videoList.length > 0) {\n            loadMedia(videoIndex);\n          }\n        })\n        .catch(error => console.error('Error loading the JSON data: ', error));\n    });\n\n\n    document.addEventListener('keydown', function(event) {\n      if (event.code === 'Space') {\n        event.preventDefault();\n        submitAndLoadNext();\n      }\n    });\n\n    document.addEventListener('DOMContentLoaded', function() {\n        const videoPlayer = document.getElementById('videoPlayer');\n        videoPlayer.addEventListener('loadeddata', function() {\n            videoPlayer.playbackRate = 0.3;\n        });\n    });\n\n    function buildVideoList(data) {\n      var list = [];\n      for (let folder in data) {\n        data[folder].forEach(subFolder => {\n          const formattedSubFolder = subFolder.replace(/_/g, ' ');\n          const path = `/${folder}/${subFolder}/0/render.mp4`;\n          list.push({ path: path, name: formattedSubFolder, folder: folder });\n        });\n      }\n      list = shuffleArray(list);\n      return list;\n    }\n\n    function shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n\n    function loadMedia(index) {\n      if (index >= videoList.length) {\n        return;\n      }\n      const currentVideo = videoList[index];\n      const videoPlayer = document.getElementById('videoPlayer');\n      const videoCenter = document.getElementById('videoCenter');\n      const imageDisplay = document.getElementById('imageDisplay');\n      const imagePath = `/${currentVideo.folder}/rendered_pic.png`;\n      const videoPath = currentVideo.path;\n\n      document.getElementById('pageTitle').textContent = currentVideo.name;\n      videoPlayer.src = videoPath;\n      videoCenter.src = videoPath;\n      imageDisplay.src = imagePath;\n\n      videoPlayer.load();\n      videoCenter.load();\n\n      videoPlayer.removeAttribute('controls');\n      videoCenter.removeAttribute('controls');\n    }\n\n    function resetButtonStates() {\n      buttonStates = [null, null, null];\n      for (let i = 1; i <= 6; i++) {\n        const button = document.getElementById('button' + i);\n        button.classList.remove('active-success', 'active-fail');\n      }\n    }\n\n    function toggleState(buttonId) {\n      const button = document.getElementById('button' + buttonId);\n      const group = Math.ceil(buttonId / 2) - 1;\n      const isSuccess = button.classList.contains('button-success');\n\n      if (buttonStates[group] !== null) {\n        const prevButton = document.getElementById('button' + (2 * group + 1 + (buttonStates[group] === 1 ? 0 : 1)));\n        prevButton.classList.remove('active-success', 'active-fail');\n      }\n\n      if (isSuccess) {\n        button.classList.toggle('active-success', !button.classList.contains('active-success'));\n        buttonStates[group] = button.classList.contains('active-success') ? 1 : null;\n      } else {\n        button.classList.toggle('active-fail', !button.classList.contains('active-fail'));\n        buttonStates[group] = button.classList.contains('active-fail') ? 0 : null;\n      }\n    }\n\n    function submitAndLoadNext() {\n      if (buttonStates.includes(null)) {\n        alert('Please make a selection for each question.');\n        return;\n      }\n\n      const currentVideo = videoList[videoIndex];\n      const table = document.getElementById('recordTable');\n      const row = table.insertRow(-1);\n      const cell0 = row.insertCell(0);\n      const cell1 = row.insertCell(1);\n      const cell2 = row.insertCell(2);\n      const cell3 = row.insertCell(3);\n      const cell4 = row.insertCell(4);\n      cell0.innerHTML = currentVideo.folder;\n      cell1.innerHTML = currentVideo.name;\n      cell2.innerHTML = buttonStates[0]; // Recognizable\n      cell3.innerHTML = buttonStates[1]; // Adjectives\n      cell4.innerHTML = buttonStates[2]; // Overall\n\n      count++;\n      updateProgressDisplay();\n      videoIndex++;\n\n      buttonStates = [null, null, null];\n      currentGroup = 0;\n\n      if (videoIndex < videoList.length) {\n        loadMedia(videoIndex);\n        resetButtonStates();\n      } else {\n        alert('No more videos to review');\n        exportTableToCSV('export.csv');\n      }\n    }\n\n    function updateProgressDisplay() {\n      const progressElement = document.getElementById('progressDisplay');\n      progressElement.textContent = `Progress: ${count}/800`;\n    }\n\n    function exportTableToCSV(filename) {\n        var csv = [];\n        var rows = document.querySelectorAll(\"table tr\");\n\n        for (var i = 0; i < rows.length; i++) {\n            var row = [], cols = rows[i].querySelectorAll(\"td, th\");\n\n            for (var j = 0; j < cols.length; j++)\n                row.push('\"' + cols[j].innerText + '\"');\n\n            csv.push(row.join(\",\"));\n        }\n\n        downloadCSV(csv.join(\"\\n\"), filename);\n    }\n\n    function downloadCSV(csv, filename) {\n        var csvFile;\n        var downloadLink;\n\n        // CSV file\n        csvFile = new Blob([csv], {type: \"text/csv\"});\n\n        // Download link\n        downloadLink = document.createElement(\"a\");\n\n        // File name\n        downloadLink.download = filename;\n\n        // Create a link to the file\n        downloadLink.href = window.URL.createObjectURL(csvFile);\n\n        // Hide download link\n        downloadLink.style.display = \"none\";\n\n        // Add the link to DOM\n        document.body.appendChild(downloadLink);\n\n        // Click download link\n        downloadLink.click();\n\n        // Clean up the DOM by removing the link\n        document.body.removeChild(downloadLink);\n    }\n\n    window.addEventListener('beforeunload', function (e) {\n        e.preventDefault();\n        e.returnValue = '';\n        return 'If you leave now, your content will not be saved.';\n    });\n  </script>\n\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Index.html b/Index.html
--- a/Index.html	
+++ b/Index.html	
@@ -275,7 +275,8 @@
         data[folder].forEach(subFolder => {
           const formattedSubFolder = subFolder.replace(/_/g, ' ');
           const path = `/${folder}/${subFolder}/0/render.mp4`;
-          list.push({ path: path, name: formattedSubFolder, folder: folder });
+          const title = `${folder}: ${formattedSubFolder}`; // 拼接 key 和 value
+          list.push({ path: path, name: title, folder: folder });
         });
       }
       list = shuffleArray(list);
@@ -301,7 +302,9 @@
       const imagePath = `/${currentVideo.folder}/rendered_pic.png`;
       const videoPath = currentVideo.path;
 
+      // 更新页面标题，使用拼接后的 key + value
       document.getElementById('pageTitle').textContent = currentVideo.name;
+
       videoPlayer.src = videoPath;
       videoCenter.src = videoPath;
       imageDisplay.src = imagePath;
@@ -313,6 +316,7 @@
       videoCenter.removeAttribute('controls');
     }
 
+
     function resetButtonStates() {
       buttonStates = [null, null, null];
       for (let i = 1; i <= 6; i++) {
